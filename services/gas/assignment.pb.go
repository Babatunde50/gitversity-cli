// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.2
// source: assignment.proto

package gas

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for Assignment Status
type AssignmentStatus int32

const (
	AssignmentStatus_UNDEFINED AssignmentStatus = 0
	AssignmentStatus_OPEN      AssignmentStatus = 1
	AssignmentStatus_CLOSED    AssignmentStatus = 2
	AssignmentStatus_DRAFT     AssignmentStatus = 3
)

// Enum value maps for AssignmentStatus.
var (
	AssignmentStatus_name = map[int32]string{
		0: "UNDEFINED",
		1: "OPEN",
		2: "CLOSED",
		3: "DRAFT",
	}
	AssignmentStatus_value = map[string]int32{
		"UNDEFINED": 0,
		"OPEN":      1,
		"CLOSED":    2,
		"DRAFT":     3,
	}
)

func (x AssignmentStatus) Enum() *AssignmentStatus {
	p := new(AssignmentStatus)
	*p = x
	return p
}

func (x AssignmentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssignmentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_assignment_proto_enumTypes[0].Descriptor()
}

func (AssignmentStatus) Type() protoreflect.EnumType {
	return &file_assignment_proto_enumTypes[0]
}

func (x AssignmentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssignmentStatus.Descriptor instead.
func (AssignmentStatus) EnumDescriptor() ([]byte, []int) {
	return file_assignment_proto_rawDescGZIP(), []int{0}
}

// Enum for Assignment Type
type AssignmentType int32

const (
	AssignmentType_INDIVIDUAL AssignmentType = 0
	AssignmentType_GROUP      AssignmentType = 1
)

// Enum value maps for AssignmentType.
var (
	AssignmentType_name = map[int32]string{
		0: "INDIVIDUAL",
		1: "GROUP",
	}
	AssignmentType_value = map[string]int32{
		"INDIVIDUAL": 0,
		"GROUP":      1,
	}
)

func (x AssignmentType) Enum() *AssignmentType {
	p := new(AssignmentType)
	*p = x
	return p
}

func (x AssignmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssignmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_assignment_proto_enumTypes[1].Descriptor()
}

func (AssignmentType) Type() protoreflect.EnumType {
	return &file_assignment_proto_enumTypes[1]
}

func (x AssignmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssignmentType.Descriptor instead.
func (AssignmentType) EnumDescriptor() ([]byte, []int) {
	return file_assignment_proto_rawDescGZIP(), []int{1}
}

// Message for Assignments
type Assignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title           string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CourseId        string                 `protobuf:"bytes,4,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	UserId          string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreationDate    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	DueDate         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	EndDate         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Status          AssignmentStatus       `protobuf:"varint,9,opt,name=status,proto3,enum=gas.AssignmentStatus" json:"status,omitempty"`
	AssignmentType  AssignmentType         `protobuf:"varint,10,opt,name=assignment_type,json=assignmentType,proto3,enum=gas.AssignmentType" json:"assignment_type,omitempty"`
	PlagiarismCheck bool                   `protobuf:"varint,11,opt,name=plagiarism_check,json=plagiarismCheck,proto3" json:"plagiarism_check,omitempty"`
	AutoGrade       bool                   `protobuf:"varint,12,opt,name=auto_grade,json=autoGrade,proto3" json:"auto_grade,omitempty"`
	InviteCode      string                 `protobuf:"bytes,13,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
	RepoId          string                 `protobuf:"bytes,14,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
}

func (x *Assignment) Reset() {
	*x = Assignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assignment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignment) ProtoMessage() {}

func (x *Assignment) ProtoReflect() protoreflect.Message {
	mi := &file_assignment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignment.ProtoReflect.Descriptor instead.
func (*Assignment) Descriptor() ([]byte, []int) {
	return file_assignment_proto_rawDescGZIP(), []int{0}
}

func (x *Assignment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Assignment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Assignment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Assignment) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *Assignment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Assignment) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *Assignment) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *Assignment) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Assignment) GetStatus() AssignmentStatus {
	if x != nil {
		return x.Status
	}
	return AssignmentStatus_UNDEFINED
}

func (x *Assignment) GetAssignmentType() AssignmentType {
	if x != nil {
		return x.AssignmentType
	}
	return AssignmentType_INDIVIDUAL
}

func (x *Assignment) GetPlagiarismCheck() bool {
	if x != nil {
		return x.PlagiarismCheck
	}
	return false
}

func (x *Assignment) GetAutoGrade() bool {
	if x != nil {
		return x.AutoGrade
	}
	return false
}

func (x *Assignment) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

func (x *Assignment) GetRepoId() string {
	if x != nil {
		return x.RepoId
	}
	return ""
}

var File_assignment_proto protoreflect.FileDescriptor

var file_assignment_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x67, 0x61, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x04, 0x0a, 0x0a, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67,
	0x61, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x67, 0x69, 0x61, 0x72, 0x69, 0x73, 0x6d, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x6c, 0x61,
	0x67, 0x69, 0x61, 0x72, 0x69, 0x73, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x6f, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x49, 0x64, 0x2a, 0x42, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x03, 0x2a, 0x2b, 0x0a, 0x0e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x4e, 0x44, 0x49, 0x56, 0x49, 0x44, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x10, 0x01, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x76, 0x65, 0x72, 0x73, 0x69, 0x74, 0x79, 0x2f,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x67, 0x61, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_assignment_proto_rawDescOnce sync.Once
	file_assignment_proto_rawDescData = file_assignment_proto_rawDesc
)

func file_assignment_proto_rawDescGZIP() []byte {
	file_assignment_proto_rawDescOnce.Do(func() {
		file_assignment_proto_rawDescData = protoimpl.X.CompressGZIP(file_assignment_proto_rawDescData)
	})
	return file_assignment_proto_rawDescData
}

var file_assignment_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_assignment_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_assignment_proto_goTypes = []interface{}{
	(AssignmentStatus)(0),         // 0: gas.AssignmentStatus
	(AssignmentType)(0),           // 1: gas.AssignmentType
	(*Assignment)(nil),            // 2: gas.Assignment
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_assignment_proto_depIdxs = []int32{
	3, // 0: gas.Assignment.creation_date:type_name -> google.protobuf.Timestamp
	3, // 1: gas.Assignment.due_date:type_name -> google.protobuf.Timestamp
	3, // 2: gas.Assignment.end_date:type_name -> google.protobuf.Timestamp
	0, // 3: gas.Assignment.status:type_name -> gas.AssignmentStatus
	1, // 4: gas.Assignment.assignment_type:type_name -> gas.AssignmentType
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_assignment_proto_init() }
func file_assignment_proto_init() {
	if File_assignment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_assignment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_assignment_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_assignment_proto_goTypes,
		DependencyIndexes: file_assignment_proto_depIdxs,
		EnumInfos:         file_assignment_proto_enumTypes,
		MessageInfos:      file_assignment_proto_msgTypes,
	}.Build()
	File_assignment_proto = out.File
	file_assignment_proto_rawDesc = nil
	file_assignment_proto_goTypes = nil
	file_assignment_proto_depIdxs = nil
}
